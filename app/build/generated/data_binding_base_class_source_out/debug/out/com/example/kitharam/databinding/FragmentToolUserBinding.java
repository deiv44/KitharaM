// Generated by view binder compiler. Do not edit!
package com.example.kitharam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kitharam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentToolUserBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView headerTitle;

  @NonNull
  public final Button startStopButton;

  @NonNull
  public final TextView tempoLabel;

  @NonNull
  public final SeekBar tempoSeekBar;

  private FragmentToolUserBinding(@NonNull RelativeLayout rootView, @NonNull TextView headerTitle,
      @NonNull Button startStopButton, @NonNull TextView tempoLabel,
      @NonNull SeekBar tempoSeekBar) {
    this.rootView = rootView;
    this.headerTitle = headerTitle;
    this.startStopButton = startStopButton;
    this.tempoLabel = tempoLabel;
    this.tempoSeekBar = tempoSeekBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentToolUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentToolUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tool_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentToolUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.headerTitle;
      TextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.startStopButton;
      Button startStopButton = ViewBindings.findChildViewById(rootView, id);
      if (startStopButton == null) {
        break missingId;
      }

      id = R.id.tempoLabel;
      TextView tempoLabel = ViewBindings.findChildViewById(rootView, id);
      if (tempoLabel == null) {
        break missingId;
      }

      id = R.id.tempoSeekBar;
      SeekBar tempoSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (tempoSeekBar == null) {
        break missingId;
      }

      return new FragmentToolUserBinding((RelativeLayout) rootView, headerTitle, startStopButton,
          tempoLabel, tempoSeekBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
