// Generated by view binder compiler. Do not edit!
package com.example.kitharam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.denzcoskun.imageslider.ImageSlider;
import com.example.kitharam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView RecyclerView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageSlider imageSlider;

  @NonNull
  public final TextView textvwhome1;

  private FragmentHomeUserBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView RecyclerView, @NonNull CardView cardView,
      @NonNull ImageSlider imageSlider, @NonNull TextView textvwhome1) {
    this.rootView = rootView;
    this.RecyclerView = RecyclerView;
    this.cardView = cardView;
    this.imageSlider = imageSlider;
    this.textvwhome1 = textvwhome1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RecyclerView;
      RecyclerView RecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerView == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.image_slider;
      ImageSlider imageSlider = ViewBindings.findChildViewById(rootView, id);
      if (imageSlider == null) {
        break missingId;
      }

      id = R.id.textvwhome1;
      TextView textvwhome1 = ViewBindings.findChildViewById(rootView, id);
      if (textvwhome1 == null) {
        break missingId;
      }

      return new FragmentHomeUserBinding((ConstraintLayout) rootView, RecyclerView, cardView,
          imageSlider, textvwhome1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
